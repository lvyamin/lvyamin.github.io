{"version":3,"sources":["webpack:///./src/views/Components.vue?ec77","webpack:///src/views/Components.vue","webpack:///./src/views/Components.vue?f4f5","webpack:///./src/views/Components.vue","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","ref","attrs","clickMe","prop1","staticRenderFns","component","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACJ,EAAIM,GAAG,kbAAkbF,EAAG,gBAAgB,CAACG,IAAI,QAAQC,MAAM,CAAC,YAAcR,EAAIS,QAAQ,QAAUT,EAAIU,SAASN,EAAG,gBAAgB,CAACI,MAAM,CAAC,QAAS,EAAK,QAAUR,EAAIU,UAAU,IAClsBC,EAAkB,G,wBC2BP,kBACb,KAAF,aACE,WAAF,CACI,aAAJ,QAEE,QALF,WAMI,QAAJ,iCAEE,KARF,WASI,MAAJ,CACM,MAAN,IAGE,QAAF,CACI,QADJ,WAEM,KAAN,wBAfA,sBAmBE,QAAF,qCC/CoV,I,YCOhVC,EAAY,eACd,EACAb,EACAY,GACA,EACA,KACA,KACA,MAIa,aAAAC,E,2CClBA,SAASC,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,EAZT","file":"js/chunk-832d6c0e.7fc8e0cf.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('pre',[_vm._v(\"定义全局组件：Vue.component('componentname',component)\\n定义组件可以用首字母大写的驼峰命名法，运用时候就可以用烤串式命名调用\\n也可以用components:{} 的方式来引入组件\\n当组件不是new vue 实例化出来的，那么data就需要是个方法\\n也有技巧可以跨过这样的限制 那就是 const data = {...}\\n组件中用到 :\\ndata(){\\n    return data\\n}\\n如果想多次使用同一个组件，为了不会让其相互影响，我们如下处理：\\n就不要使用\\nconst data = {...}\\ndata(){\\n    return data\\n}\\n每一个组件有自己独立的data才不会互相影响\\nreturn是一个新建的对象，而不是一个全局的对象，这就是为什么需要data是一个方法的原因\\n组件内部不应该去主动修改props中的数据，如果要修改，需要在调用组件的地方去修改\\n\")]),_c('component-one',{ref:\"comp1\",attrs:{\"handleClick\":_vm.clickMe,\"propOne\":_vm.prop1}}),_c('component-one',{attrs:{\"active\":true,\"propOne\":_vm.prop1}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n<pre>\n定义全局组件：Vue.component('componentname',component)\n定义组件可以用首字母大写的驼峰命名法，运用时候就可以用烤串式命名调用\n也可以用components:{} 的方式来引入组件\n当组件不是new vue 实例化出来的，那么data就需要是个方法\n也有技巧可以跨过这样的限制 那就是 const data = {...}\n组件中用到 :\ndata(){\n    return data\n}\n如果想多次使用同一个组件，为了不会让其相互影响，我们如下处理：\n就不要使用\nconst data = {...}\ndata(){\n    return data\n}\n每一个组件有自己独立的data才不会互相影响\nreturn是一个新建的对象，而不是一个全局的对象，这就是为什么需要data是一个方法的原因\n组件内部不应该去主动修改props中的数据，如果要修改，需要在调用组件的地方去修改\n</pre>\n<component-one ref=\"comp1\" :handleClick=\"clickMe\" :propOne=\"prop1\"></component-one>\n<component-one :active=\"true\" :propOne=\"prop1\"></component-one>\n    </div>\n</template>\n<script>\nimport ComponentOne from '@/components/ComponentOne.vue'\nexport default {\n    name:'Components',\n    components:{\n        ComponentOne:ComponentOne\n    },\n    mounted() {\n        console.log('获取组件实例：',this.$refs.comp1)\n    },\n    data() {\n        return {\n            prop1:0\n        }\n    },\n    methods: {\n       clickMe(){\n           this.$emit('handleClick')\n       }\n    },\n    mounted() {\n        console.log('thisRefs:',this.$refs.comp1)\n    },\n    \n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Components.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Components.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Components.vue?vue&type=template&id=2d697014&\"\nimport script from \"./Components.vue?vue&type=script&lang=js&\"\nexport * from \"./Components.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}